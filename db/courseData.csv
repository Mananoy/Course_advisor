No,course_ID,name,subject_area,catalogue,pre-requisite,co-requisite,assumed_knowledge,unit,pass_rate,description,term
21,107808,Introduction to Engineering,ENG,1001,,,,3,51,"This course introduces students to the range of engineering disciplines and the engineering method of problem-solving, as well as sustainability and other issues associated with the practice of engineering. This introduction is made through a mix of lectures, group-based activities, site visits, and presentations from practising engineers. Since a key attribute of successful professional engineers is the ability to communicate effectively, the course focuses on improving core engineering communication skills. As part of a group students will attempt the Engineers Without Borders Challenge, which is an opportunity to devise engineering solutions to a problem faced by a specific developing community.",3710
28,105876,Programming (Matlab and C),ENG ,1002,,,COMP SCI 2004,3,47,"Introduces the fundamental concepts of procedural programming. Topics include data types, control structures, functions, arrays, files, and the mechanics of running, testing, and debugging. This course covers introductory programming and problem solving in MATLAB and C or Fortran. 

-  Algorithms and problem-solving: Problem-solving strategies; the role of algorithms in the problem-solving process; implementation strategies for algorithms; debugging strategies; the concept and properties of algorithms
-  Fundamental programming constructs: Syntax and semantics of a higher-level language; variables, types, expressions, and assignment; simple I/O; conditional and iterative control structures; functions and parameter passing; structured decomposition
-  Fundamental data structures: Primitive types; arrays; records; strings and string processing
-  Software development methodology: Fundamental design concepts and principles; testing and debugging strategies; test-case design (black box testing and requirements testing); unit testing; programming environments",3710
7,108528,Opportunity Assessment,ENTREP ,1006,,,,3,46,Developing an opportunity assessment programme; Assessing potential success of a number of possible opportunities; Risk analysis of commercialisation of innovation; Assessing technological innovations; Assessing market and financial issues of commercialisation; Constructing and communication of conclusions.,3720
40,19786,Mathematics IA,MATHS ,1011,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202",,COMP SCI 2004,3,50,"This course, together with MATHS 1012 Mathematics IB, provides an introduction to the basic concepts and techniques of calculus and linear algebra, emphasising their inter-relationships and applications to engineering, the sciences and financial areas; introduces students to the use of computers in mathematics; and develops problem solving skills with both theoretical and practical problems. 

Topics covered are: Calculus: functions of one variable, differentiation, the definite integral, and techniques of integration. Algebra: Linear equations, matrices, the real vector space determinants, optimisation, eigenvalues and eigenvectors; applications of linear algebra.",3710
41,9786,Mathematics IB,MATHS ,1012,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202",,COMP SCI 2000,3,46,"""This course, together with MATHS 1011 Mathematics IA, provides an introduction to the basic concepts and techniques of calculus and linear algebra, emphasising their inter-relationships and applications to engineering, the sciences and financial areas; introduces students to the use of computers in mathematics; and develops problem solving skills with both theoretical and practical problems.

Topics covered are: Calculus: Applications of the derivative; functions of two variables; Taylor series; differential equations. Algebra: The real vector space, eigenvalues and eigenvectors, linear transformations and applications of linear algebra.""",3720
18,108277,Analog Electronics,ELEC ENG ,1100,COMP SCI 1103,,,3,49,"This course develops a basic understanding of the fundamentals and principles of analog circuits and electronic devices in electrical and electronic engineering. It covers the key electrical variables and the application of fundamental circuit laws and theorems to DC/AC resistive circuits; the analysis of RLC circuits including resonance; the principles, construction, analysis and modelling of basic semi-conductor devices; and experimental work involving diodes, transistor amplifiers and op-amps. It includes a communication and professional skills development component.",3710
17,108280,Digital Electronics,ELEC ENG ,1102,COMP SCI 3303,,,3,48,"This course provides an introduction to the control of engineering systems using microprocessors, sensors and actuators. Within this context it introduces the fundamentals of digital logic, digital arithmetic, programmable logic and computer architecture. Research skills and aspects of professional practice are developed through group-bases assignments.",3720
27,105877,Object Oriented Programming,COMP SCI ,1102,"COMP SCI 1009, COMP SCI 1102 or COMP SCI 1202",,,3,51,"This course is designed as an entry level programming course for students who have prior programming experience. This course introduces the concepts of object-oriented programming to students with a background in the procedural paradigm.

Note: Students who do not have prior programming experience or who are not confident in their programming ability should complete COMP SCI 1101 Introduction to Programming prior to undertaking this course.

The course begins with a brief review of control structures and data types with emphasis on structured data types and array processing. It then moves on to introduce the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Other topics include an overview of programming language principles, simple analysis of algorithms, basic searching and sorting techniques, and an introduction to software engineering issues.

-  Brief review of control structures, functions, and primitive data types
-  Object-oriented programming: Object-oriented design; encapsulation and information-hiding; separation of behavior and implementation; classes, subclasses, and inheritance; polymorphism; class hierarchies
-  Fundamental computing algorithms: simple searching and sorting algorithms (linear and binary search, selection and insertion sort)
-  Fundamentals of event-driven programming
-  Machine level representation of data: Bits, bytes, and words; numeric data representation and number bases; representation of character data
-  Introduction to computer graphics: Using a simple graphics API
-  Memory management
-  Overview of programming languages: History of programming languages; brief survey of programming paradigms
-  Introduction to language translation: Comparison of interpreters and compilers; language translation phases; machine-dependent and machine-independent aspects of translation",3720
9,108366,Introduction to Software Engineering,COMP SCI ,1106,,COMP SCI 1101 or COMP SCI 1201 should be completed prior to or concurrently with COMP SCI 1106,,3,51,"This course provides a general introduction to software engineering. It introduces concepts such as software processes and agile methods, and essential software development activities, from initial specification through to system maintenance. Formalisms and tools to assist in software development are also presented, including common design patterns and UML notation. There is a focus on software testing, from unit testing to the testing of software releases. Project management and professional software engineering practice will also be covered. Case studies provide practical examples for many of these concepts.",3720
46,1956,Computer Systems,COMP SCI ,2000,,,,3,49,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",3710
47,1956,Computer Systems,COMP SCI ,2000,,,,3,49,"Information storage representation, Memory organisation and hierarchy, Processor fundamentals, assembler programming, assembler operation, subroutine calling mechanisms, linking/loading, Input-output and device controllers requirements for supporting an operating system and device drivers.",3720
38,102482,Systems Programming,COMP SCI ,2005,At least a C- in both SACE Stage 2 Mathematical Studies and SACE Stage 2 Specialist Mathematics; or a 3 in International Baccalaureate Mathematics HL; or MATHS 1013,,At least B in both SACE Stage 2 Mathematical Studies and Specialist Mathematics. Students who have not achieved this standard are strongly advised to take MATHS 1013 Mathematics IM before attempting this course.,3,45,"Introduction to C for C++ programmers. UNIX tools; design philosophy, command line options, combining programs using pipes and I/O redirection. File systems and memory. Profiling tools, binary tools, debuging tools. Basic shell scripting. Build tools. Signal and handling, synchronous and asynchronous I/O. Introduction to threads and concurrency. Timers and their uses.",3710
32,105579,Digital Systems,ELEC ENG ,2100,,,,3,46,"This course develops engineering capabilities pertaining to the design of digital electronic systems. Designs for contemporary implementation technologies are expressed using circuit schematics and a hardware description language. System architecture, microarchitecture and interfacing concepts are developed through an extended case study of a commercial microprocessor. Students undertake an independent research exercise on a question related to the future of digital electronics technology.",3710
29,105875,Algorithm Design & Data Structures,COMP SCI ,2103,,,ELEC ENG 2007,3,46,"Builds on the foundation provided by the COMP SCI 1101-1102 sequence to introduce the fundamental concepts of data structures and the algorithms that proceed from them, and aspects of software engineering. Topics include recursion, the underlying philosophy of object-oriented programming, fundamental data structures (including stacks, queues, linked lists, hash tables, and trees), the basics of algorithmic analysis, and an introduction to the principles of language translation.

-  Review of elementary programming concepts
-  Fundamental data structures: Stacks; queues; linked lists
-  Object-oriented programming: Object-oriented design; encapsulation and information hiding; classes; separation of behaviour and implementation; class hierarchies; inheritance; polymorphism
-  Fundamental computing algorithms: O(N log N) sorting algorithms;
-  Recursion: The concept of recursion; recursive mathematical functions; simple recursive procedures; divide-and-conquer strategies; recursive backtracking; implementation of recursion
-  Basic algorithmic analysis: Asymptotic analysis of upper and average complexity bounds; identifying differences among best, average, and worst case behaviours; big ""O,"" little ""o,"" omega, and theta notation; 
-  Algorithmic strategies: Brute-force algorithms; greedy algorithms; divide-and-conquer; backtracking; branch-and-bound; heuristics; pattern matching and string/text algorithms; numerical approximation algorithms
-  Overview of programming languages: Programming paradigms
-  Software engineering: Software validation; testing fundamentals, including test plan creation and test case generation; object-oriented testing
-  Software evolution: Software maintenance; characteristics of maintainable software; reengineering; legacy systems; software reuse",3710
26,106384,Algorithm & Data Structure Analysis,COMP SCI ,2201,SACE Stage 2 Mathematical Studies or equivalent,,,3,47,"Program development techniques including basic ideas of correctness and proof; Notions of complexity and analysis; Recursion. Approaches to Problem Solving. Notion of abstract data type, representation of lists, stacks, queues, sets, trees and hash tables. Graphs and Graph Traversal.",3720
16,108284,Software Engineering Workshop |,COMP SCI ,2205,,,,3,48,"The objectives of this course are to provide software engineering students with the fundamental knowledge and practical understanding of methods, approaches, and tools for requirements of engineering in different software paradigms, deriving and reasoning appropriate description of a desired system. The course will also focus on modeling and analysis knowledge and skills for documenting and evaluating requirements and conceptual design. This course will also focus on team work and communication skills, requirements prioritisation and negotiation, and automated software engineering tools relevant to requirement and modelling phases of software engineering. The course design and delivery will also focus on building a unique identity of software engineering in the students from an early state of their degree program.
The course will be delivered in seminar or workshop styles and a large number of assessment tasks will be project based in order to give the students skills and experience of working in teams of projects work like real world environments.",3710
15,108285,Software Engineering Workshop II,COMP SCI ,2206,,,,3,46,"The objective of this course is to teach a diverse number of methods, approaches, and tools for systematically designing and analysing software. The course will focus on approaches for both high-level and low-level design software. The course will also cover the topics related to design attributes metrics and design quality evaluation. The course particularly focuses on creativity in software design and sketching for early design concepts. The course will also cover topics like co-evolution of requirements and design, design fictions, and personas.
The course will be delivered in seminar or workshop style and a large number of assessment tasks will be project based in order to give the students skills and experience of coming up with divergent and unique solutions to the same problems while working in teams on software deign projects.",3720
1,108960,Web & Database Computing,COMP SCI ,2207,,,COMP SCI 1101 or equivalent,3,48,"A modern introduction to designing and creating web-based applications.  The course covers client-server architecture, database fundamentals and the principles behind writing software that functions over networks.  Widely used web development languages and environments are compared and will be used by students to implement their own applications.",3710
4,108529,Innovation and Creativity,ENTREP ,3000,At least 2 years full time undergraduate study,,,3,49,"Individual and group creativity; barriers to creativity and approaches for overcoming these; methods for generating or recognising ideas, alternatives or possibilities to solve commercial or operational problems; turning creativity into innovation that benefits the customer and the business venture; bringing creativity and innovation into the organisation and building an environment to support these activities; creative scenarios for the future for the organisation.",3705
6,108529,Innovation and Creativity,ENTREP ,3000,At least 2 years full time undergraduate study,,,3,49,"Individual and group creativity; barriers to creativity and approaches for overcoming these; methods for generating or recognising ideas, alternatives or possibilities to solve commercial or operational problems; turning creativity into innovation that benefits the customer and the business venture; bringing creativity and innovation into the organisation and building an environment to support these activities; creative scenarios for the future for the organisation.",3715
5,108529,Innovation and Creativity,ENTREP ,3000,At least 2 years full time undergraduate study,,,3,49,"Individual and group creativity; barriers to creativity and approaches for overcoming these; methods for generating or recognising ideas, alternatives or possibilities to solve commercial or operational problems; turning creativity into innovation that benefits the customer and the business venture; bringing creativity and innovation into the organisation and building an environment to support these activities; creative scenarios for the future for the organisation.",3720
45,2328,Computer Networks & Applications,COMP SCI ,3001,,,,3,47,"Introduction to networks and digital communications with a focus on  Internet protocols:  Application layer architectures (client/server, peer-to-peer) and protocols (HTTP-web, SMTP-mail, etc), Transport  layer operation: (reliable transport, congestion and flow  control, UDP, TCP); Network layer operation - (routing, addressing, IPv4 and  IPv6), Data Link layer operation (error detection/correction, access control, Ethernet, 802.11, PPP),  Layer 2/3  protocols (ATM and MPLS); selected current topics such as: security,  multimedia protocols, Quality of Service, mobility, wireless  networking, emerging protocols, network management",3710
44,4468,Operating Systems,COMP SCI ,3004,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1102, COMP SCI 1202 or COMP SCI 2202",,MATHS1012 or MATHS 1008,3,49,"OS purposes: resource management and the extended virtual computer; historical development. Processes: critical sections and mutual exclusion, semaphores, monitors, classical problems, deadlock; process scheduling. Input and Output: hardware and software control. 
Memory management: multi-programming; swapping; virtual memory, paging and symbolic segmentation; File System: operations, implementation, performance. Operating System Security and Protection mechanisms:
protection domains, access lists, capability systems, principle of minimum privilege, security threats and attacks, encryption, and authentication",3720
43,5141,Computer Architecture,COMP SCI ,3005,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202",,,3,50,"Fundamentals of computer design; quantifying cost and performance; instruction set architecture; program behaviour and measurement of instruction set use; processor datapaths and control; pipelining, handling pipeline hazards; memory hierarchies and performance; I/O devices, controllers and drivers; I/O and system performance.",3710
42,6378,Artificial Intelligence,COMP SCI ,3007,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202",,COMP SCI 2000,3,46,This is an introductory course on Artificial Intelligence. The topics may include: AI methodology and fundamentals; intelligent agents; search algorithms; game playing; supervised and unsupervised learning; decision tree learning; neural networks; nearest neighbour methods; dimensionality reduction; clustering; kernel machines; support vector machines; uncertainty and probability theory; probabilistic reasoning in AI; Bayesian networks; statistical learning; fuzzy logic. Several assignments will be given to enable the student to gain practical experience in using these techniques.,3710
36,102485,Computer Graphics,COMP SCI ,3014,"one of COMP SCI 1009, COMP SCI 1007, COMP SCI 1102, COMP SCI 1202, or COMP SCI 2202",,,3,46,"Selected topics from:Light and the human visual system. Colour. Images, quantisation and sampling. Image manipulations. Raster graphics.  Coordinate systems and transformations. The viewing frustum. The graphics pipeline and toolkits. Clipping and culling. Visibility. Lighting and shadows. Transparency and blending. Texture mapping. Local shading models. Environment mapping techniques. Multi-pass rendering. Shaders. Animation and particles. Level of detail. Scene graphs and implementation efficiency.",3710
39,102460,Micro-Controller Programming,MECH ENG ,3032,MATHS 1011,,,3,45,"The focus of this course is on the programming and use of micro-controllers in mechatronics applications.  Assuming basic knowledge of the C programming language, the material is presented in a combination of lectures, tutorials and hands-on laboratory sessions.  The build process of micro-controller software is examined in detail thereby providing the language for understanding compiler handbooks, on-line publications and micro-controller datasheets.  The newly developed skills are then applied in a number of practical case studies covering typical mechatronics applications including servo-mechanisms, sensor interfacing, real-time issues and inter-platform communication.  Emphasis will be laid on the confident use of the C programming language using a variety of programming environments.  Fault finding techniques will be introduced, ranging from low-level in-circuit debugging to source-level debugging on simulators and evaluation boards.  Small-group projects and case studies will be used to provide important hands-on experience with micro-controller based projects.",3720
31,105583,Telecommunications Principles,ELEC ENG ,3108,,,,3,45,Plain old telephone system; Cellular systems including GSM and IS-95 CDMA; Principles of IP - datagram networks and routing; Principles of ATM; QoS on IP; Audio and voice coding; Voice over IP; GPRS and ADSL - hybrid voice/data network principles; Satellite applications: voice telephony and navigation (GPS).,3720
20,107926,Engineering Software as Services |,COMP SCI ,3303,,,,3,51,"The objectives of this course are to provide students with the knowledge and skills required for engineering Software as a Service, SaaS. Students will use practices such as Scrum, continuous deployment and Behaviour Driven Development to build SaaS applications. The course will use technologies such as Ruby on Rails, GitHub, Cucumber and RSpec to aid development. This course will cover both the theoretical concepts and practical implementation details required to engineer SaaS in Cloud based web applications. There will be a strong focus on collaborative coding and team projects.",3710
19,107927,Engineering Software as Services II,COMP SCI ,3304,,,,3,51,"The objectives of this course are to enable students to advance and apply the knowledge, understanding, and skills for engineering software as services acquired by successfully completing Engineering Software as Services (ESS) I. The students will be exposed to more advanced topics and complex problems to be solved using state-of-the-art software development methods (such as Agile methods, Lean approaches, and DevOps) and technologies (Ruby on Rails, and Cloud Computing). This course will put more emphasis on challenging project work that will require students to learn and apply more advanced concepts, implementation technologies and techniques in developing cloud-enabled software services to be deployed and operated on private, public, or hybrid Cloud platforms.
The course will be a 3 Unit one semester course offered in the second semester of third year of the BE(SE) degree program.",3720
14,108286,Parallel and Distributed Computing,COMP SCI ,3305,,,Introduction to Software Engineering,3,50,"A selection of topics from the following: the challenges faced in constructing parallel and distributed applications, including testing, debugging and performance evaluation. Various implementation techniques, paradigms, architectures and programming languages including: Flynn's taxonomy, MPI, MapReduce, OpenMP, GPGPU, concurrency and multi-threading.",3710
2,108956,Mining Big Data,COMP SCI ,3306,COMP SCI 2201,,,3,50,"The Web and Internet Commerce provide extremely large datasets from which important information can be extracted by data mining. This course will cover practical algorithms for solving key problems in mining of massive datasets. It focuses on parallel algorithmic techniques that are used for large datasets in the area of cloud computing. Furthermore, stream processing algorithms for data streams that arrive constantly, page ranking algorithms for web search, and online advertisement systems are studied in detail.",3710
10,108291,Secure Programming,COMP SCI ,3307,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202",,COMP SCI 2000,3,49,"The purpose of the course is to learn about secure software, including its design, implementation and maintenance. During the course students will be exposed to a selection of topics from the following: performing threat modelling, issues in authentication and authorisation, auditing for security, input sanitising, TOCTOU vulnerabilities, memory management issues, fixing vulnerabilities and patch distribution. The course requires previous programming experience and some understanding of computer systems.",3720
24,106989,Introduction to Statistical Machine Learning,COMP SCI ,3314,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202",,,3,48,"Statistical Machine Learning is concerned with algorithms that automatically improve their performance through ""learning"". For example, computer programs that learn to detect humans in images/video; predict stock markets, and rank web pages. Statistical machine learning has emerged mainly from computer science and artificial intelligence, and has connections to a variety of related subjects including statistics, applied mathematics and pattern analysis. Applications include image and audio signal analysis, data mining, bioinformatics and exploratory data analysis in natural science and engineering. This is an introductory course on statistical machine learning which presents an overview of many fundamental concepts, popular techniques, and algorithms in statistical machine learning. It covers basic topics such as dimensionality reduction, linear classification and regression as well as more recent topics
such as ensemble learning/boosting, support vector machines, kernel methods and manifold learning. This course will provide the students the basic ideas and intuition behind modern statistical machine learning methods. After studying this course, students will understand how, why, and when machine learning works on practical problems.",3720
34,103630,Computer Vision,COMP SCI ,3315,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202",,MATHS 1012 & COMP SCI 2005,3,48,"Over the last 40 years, researchers in artificial intelligence have endeavoured to develop computers with the capacity to ""see"" the world around them. This course aims to convey the nature of some of the fundamental problems in vision, and to explain a variety of techniques used to overcome them. Vision is a rapidly evolving area of computer science, and new and emerging approaches to these problems are discussed along with more ""classical"" techniques. Various vision problems are considered, including: feature detection in images, e.g. edge detection, and the accumulation of edge data to form lines; recovery of 3D shape from images, e.g. the use of a stereo image pair to derive 3D surface information; forming image mosaics; video surveillance techniques, e.g. tracking objects in video; motion detection in video images, e.g. counting number of moving objects in a video; recognising and classifying objects in images, e.g. searching a video for a particular object. Several assignments will be given to enable the student to gain practical experience in tackling some of these problems.",3710
30,105699,Evolutionary Computation,COMP SCI ,3316,,,"ELEC ENG 1009, ELEC ENG 1010, ELEC ENG 2008",3,49,"History of evolutionary computation; major areas: genetic algorithms, evolution strategies, evolution programming, genetic programming, classifier systems; constraint handling; multi-objective cases; dynamic environments; parallel implementations; coevolutionary systems; parameter control; hybrid approaches; commercial applications.",3720
3,108572,eChallenge,ENTREP ,3900,,,,3,51,"Entrepreneurs Challenge (Australian eChallenge) is the development of a comprehensive strategic business proposal for an early stage entrepreneurial venture. It runs in conjunction with the Australian eChallenge program. Students must attend a series of workshops including areas of: Entrepreneurship and the Opportunity; Writing Concept Proposals; How to Write a Business Plan; Intellectual Property; Researching the Market; Finance and Accounting; Social Entrepreneurship; How to Pitch your Idea and Pitch Training. Students are required to develop a concept proposal for feedback before developing a comprehensive Business Plan of their opportunity. Students pitch to panels of potential investors from the local business community. In addition to access to extensive readings, videos, mentors and other materials, students are in the running to win prizes in the Australian eChallenge program while having the course academically recognised towards their degree. The course will be taught by a mix of entrepreneurs, business practitioners and academic staff.  For more details on workshops, process and prizes, go to: www.adelaide.edu.au/echallenge",3720
8,108492,Tech eChallenge,ENTREP ,3901,,,,3,51,"The Tech eChallenge represents one of the tracks under the eChallenge umbrella suite of programs. Whereas the Australian eChallenge (ENTREP 3900) embraces business/entrepreneurial innovation and commercialisation, the Tech eChallenge focuses on technological innovation with the emphasis on product design and the development of a prototype that has market relevance. Receiving instruction and guidance from experienced mentors, underpinned by theory, students develop prototypes that address a market need and then present these to a panel of judges where they receive feedback about their innovations.  Those who complete the Tech eChallenge are able to enter the Australian eChallenge to develop entrepreneurial strategies for commercialising their prototypes and launching entrepreneurial ventures.",3710
35,103625,Software Architecture,COMP SCI ,4000,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103 or COMP SCI 2202",,COMP SCI 2006,3,45,"The following are the main topics to be covered in this course:
Introduction to the fundamentals of software architecture.
Software architecture and quality requirements of a software system.
Fundamental principles and guidelines for software architecture design, architectural styles, patterns and frameworks.
Methods, techniques and tools for describing software architecture and documenting design rationale.
Software architecture design and evaluation processes.
Rationale and architectural knowledge management in software architecting.
Approaches and tools for designing and evaluating software architectures for the state of the art technologies such as cloud-computing and service-operation and mobile computing.
Future challenges and emerging trends in software architecture discipline.",3720
23,107455,Special Topics in Computer Science A,COMP SCI ,4010,COMP SCI 2201,,,3,45,Topics approved by Head of School,3710
22,107457,Special Topics in Computer Science B,COMP SCI ,4012,COMP SCI 2201,,Basic probability theory and linear algebra,3,48,Topics approved by Head of School,3720
33,103641,Software Process Improvement,COMP SCI ,4023,,,,3,51,"This course is a guided study of software process grounded by practical personal experience. All software engineering is based on one or more processes that guide how software is developed with particular time, cost or quality goals. Process improvement aims to learn from current practice and objectively assess potential improvements. This will be explored by practicing a simplified form of the Personal Software Process and studying a number of process related topics drawn from: the goal question metric paradigm; appropriate automation; configuration management; project tracking and control; quality assurance; cost of quality; continuous integration; DevOps; software distribution; Infrastructure, Platform and Software as a Service; leveraging social media and the internet.",3710
11,108289,Research Methods in Software Engineering and Computer Science,COMP SCI ,4405,,,,3,47,"This course will prepare students for advanced research by examining how to plan, conduct and report on empirical investigations. The course will cover techniques applicable to each of the steps of a research project, including formulating research questions, theory building, data analysis (using both qualitative and quantitative methods), building evidence, assessing validity, and publishing. It will particularly focus on research involving software, developing statistical tools to measure software performance and the ways in which people interact with software tools.",3710
25,106929,Advanced Algorithms,COMP SCI ,4407,SACE Stage 2 Mathematical Studies or equivalent,,COMP SCI 1101,3,47,"The development of a sound theoretical understanding of advanced algorithms and practical problem solving skills using them.  Advanced algorithm topics chosen from: Dynamic Programming, Linear Programming, Matching, Max Flow / Min Cut, P and NP, Approximation Algorithms, Randomized Algorithms, Computational Geometry.",3710
37,102483,Event Driven Computing,COMP SCI ,4411,,,C programming e.g. MECH ENG 1103,3,49,"Event driven paradigm: Finite State Automata, their behaviour and implementation. Correspondence with regular expressions. Examples of embedded systems. Introduction to interconnected state machines, Petri Nets, and concurrency. Concepts of state-space and relationship to testing. Push-down automata and applications to parsing. Building Graphical User Interfaces: model view controller paradigm. Building GUIs using modern APIs. Ease of use and human-computer interaction issues.",3720
13,108288,Software Engineering Research Project B,COMP SCI ,4414,,,Introduction to Software Engineering,3,49,"Final year research project, jointly supervised by software engineering and computer science academics with external industry involvement. The research topic will be selected from CS staff research interests, while the area of application will be negotiated with industry partners. Students will be expected to learn and demonstrate the application of SE principles to conduct research for industry based clients outside the school.
The project will provide a pathway to enrolment in a higher degree by research.",3720
12,107288,Software Engineering Research Project A,COMP SCI ,4414,"One of COMP SCI 1007, COMP SCI 1009, COMP SCI 1103, COMP SCI 1203, COMP SCI 2103, or COMP SCI 2202",,COMP SCI 2000,3,50,"Final year research project, jointly supervised by software engineering and computer science academics with external industry involvement. The research topic will be selected from CS staff research interests, while the area of application will be negotiated with industry partners. Students will be expected to learn and demonstrate the application of SE principles to conduct research for industry based clients outside the school.
The project will provide a pathway to enrolment in a higher degree by research.",3710
